name: Deploy Infrastructure

on:
  push:
    branches:
      - main

env:
  PROJECT_NAME: express-auth-example
  ENVIRONMENT_NAME: demo
  AWS_REGION: us-east-2 # Friends don't let friends deploy to us-east-1
  AWS_ACCOUNT: "917558688231"

jobs:
  deploy:
    name: "Build and Deploy"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
        with:
              fetch-depth: 0
     
      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v2
        with:
              terraform_version: 1.2.8
              terraform_wrapper: false

      - name: Setup AWS Credientials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 1200
          role-session-name: "Deploy ${{ env.PROJECT_NAME }}: ${{ env.ENVIRONMENT_NAME }}"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{env.PROJECT_NAME}}
          IMAGE_TAG: ${{ github.sha }}
        run: |
            # Build a docker container and push it to ECR 
            docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f ./backend/Dockerfile ./backend
            echo "Pushing image to ECR..."
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Init Terraform
        working-directory: ./infrastructure
        run: >
          terraform init 
          -backend-config="bucket=terraform-${{env.PROJECT_NAME}}-${{env.AWS_REGION}}" 
          -backend-config="region=${{env.AWS_REGION}}" 
          -backend-config="dynamodb_table=terraform-${{env.PROJECT_NAME}}-${{env.AWS_REGION}}" 
          -backend-config="key=${{env.PROJECT_NAME}}.tfstate"

      - name: Apply Terraform
        working-directory: ./infrastructure
        run: |
          terraform apply \
            -lock-timeout=30m \
            -var "project_name=${{env.PROJECT_NAME}}" \
            -var "environment=${{env.ENVIRONMENT_NAME}}" \
            -var "region=${{env.AWS_REGION}}" \
            -var "image=${{ steps.login-ecr.outputs.registry }}/${{env.PROJECT_NAME}}:${{github.sha}}" \
            -auto-approve
        